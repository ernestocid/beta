2014-10-07 13:28:58,744 2459 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:28:58,756 2471 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:28:58,763 2478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:28:58,763 2478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:28:59,435 3150 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:28:59,435 3150 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:28:59,436 3151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:28:59,436 3151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55200
2014-10-07 13:28:59,436 3151 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55200
2014-10-07 13:28:59,437 3152 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:28:59,437 3152 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8773
2014-10-07 13:28:59,437 3152 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8773
2014-10-07 13:28:59,439 3154 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55200 using key 4199f6402fe203b5
2014-10-07 13:28:59,440 3155 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:28:59,441 3156 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:28:59,628 3343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:28:59,739 3454 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:28:59,739 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,739 3454 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:28:59,756 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,757 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,760 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:28:59,762 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,762 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,763 3478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,763 3478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:28:59,763 3478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,764 3479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,764 3479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,765 3480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:28:59,765 3480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,765 3480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,766 3481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,766 3481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:28:59,767 3482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,768 3483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,768 3483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,769 3484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:28:59,769 3484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,770 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,770 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,771 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:28:59,771 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,771 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,772 3487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,772 3487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:28:59,773 3488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,773 3488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,773 3488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,774 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:28:59,774 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,775 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,775 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,776 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:28:59,776 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,777 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,777 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,778 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:28:59,778 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,778 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,779 3494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,780 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:28:59,780 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,780 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,781 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,781 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:28:59,782 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,782 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,783 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,783 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:28:59,784 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:28:59,784 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,785 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,804 3519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:28:59,858 3573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:28:59,862 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,863 3578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,876 3591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:28:59,894 3609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:28:59,895 3610 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:28:59,895 3610 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:28:59,895 3610 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:28:59,896 3611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,896 3611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:28:59,913 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:28:59,967 3682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:28:59,967 3682 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,967 3682 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,967 3682 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,967 3682 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,968 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,969 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:28:59,969 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:28:59,969 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:28:59,986 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:28:59,987 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,000 3715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:29:00,015 3730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:29:00,015 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:29:00,015 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:00,015 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:29:00,015 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:29:00,015 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:29:00,016 3731 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:29:00,016 3731 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:00,018 3733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:00,018 3733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,068 3783 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:29:00,074 3789 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:29:00,075 3790 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:29:00,075 3790 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:29:00,767 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:29:00,767 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:29:00,768 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:29:00,768 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55202
2014-10-07 13:29:00,768 4483 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55202
2014-10-07 13:29:00,768 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:29:00,768 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8777
2014-10-07 13:29:00,768 4483 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8777
2014-10-07 13:29:00,768 4483 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55202 using key 4199f6402fe203b5
2014-10-07 13:29:00,769 4484 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:29:00,770 4485 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:29:00,789 4504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:29:00,875 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:00,875 4590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:29:00,875 4590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:29:00,875 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:00,876 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,877 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:29:00,888 4603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:00,890 4605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:00,891 4606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,893 4608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:29:00,905 4620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:29:00,905 4620 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:29:00,906 4621 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:29:00,906 4621 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:29:00,906 4621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:00,907 4622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,907 4622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:29:00,983 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:00,983 4698 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:00,984 4699 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:29:00,984 4699 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:00,987 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:00,987 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:00,994 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:29:01,012 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:29:01,012 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:29:01,012 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:01,012 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:29:01,013 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:01,013 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:01,014 4729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:08,865 2173 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:29:08,877 2185 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:29:08,881 2189 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:29:08,882 2190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:29:09,467 2775 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:29:09,467 2775 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:29:09,468 2776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:29:09,468 2776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55209
2014-10-07 13:29:09,468 2776 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55209
2014-10-07 13:29:09,468 2776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:29:09,468 2776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8783
2014-10-07 13:29:09,469 2777 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8783
2014-10-07 13:29:09,469 2777 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55209 using key f6ebc61cde662e38
2014-10-07 13:29:09,470 2778 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:29:09,471 2779 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:29:09,653 2961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:29:09,748 3056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,748 3056 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:29:09,749 3057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:29:09,765 3073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,766 3074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,769 3077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:29:09,770 3078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,770 3078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,771 3079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,771 3079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:29:09,772 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,772 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,773 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,773 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:29:09,773 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,774 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,774 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,775 3083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:29:09,776 3084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,777 3085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,777 3085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,778 3086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:29:09,778 3086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,778 3086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,779 3087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,779 3087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:29:09,780 3088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,780 3088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,780 3088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,781 3089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:29:09,781 3089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,782 3090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,782 3090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,783 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:29:09,783 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,783 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,784 3092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,784 3092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:29:09,785 3093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,785 3093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,785 3093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,786 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:29:09,786 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,786 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,787 3095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,787 3095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:29:09,788 3096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,788 3096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,788 3096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,789 3097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:29:09,789 3097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,790 3098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,790 3098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,791 3099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:29:09,791 3099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:09,792 3100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,792 3100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,815 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:29:09,873 3181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:09,877 3185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,878 3186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,887 3195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:29:09,900 3208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:29:09,900 3208 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:29:09,900 3208 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:29:09,900 3208 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:29:09,901 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,901 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:09,913 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:29:09,970 3278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:09,970 3278 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,970 3278 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,970 3278 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,970 3278 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,971 3279 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:09,972 3280 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:09,972 3280 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:09,991 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:09,991 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,008 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:29:10,033 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:29:10,033 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:10,035 3343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,036 3344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,081 3389 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:29:10,086 3394 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:29:10,087 3395 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:29:10,087 3395 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:29:10,727 4035 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:29:10,728 4036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:29:10,728 4036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:29:10,728 4036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55211
2014-10-07 13:29:10,728 4036 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55211
2014-10-07 13:29:10,729 4037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:29:10,729 4037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8787
2014-10-07 13:29:10,729 4037 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8787
2014-10-07 13:29:10,729 4037 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55211 using key f6ebc61cde662e38
2014-10-07 13:29:10,730 4038 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:29:10,731 4039 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:29:10,742 4050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:29:10,822 4130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:10,823 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,824 4132 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:29:10,825 4133 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:29:10,825 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,826 4134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:29:10,837 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:10,840 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,840 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,842 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:29:10,854 4162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:29:10,855 4163 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:29:10,855 4163 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:29:10,855 4163 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:29:10,856 4164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,856 4164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,857 4165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:29:10,938 4246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:10,941 4249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,938 4246 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:10,942 4250 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:29:10,942 4250 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:10,942 4250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:10,949 4257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:29:10,966 4274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:29:10,968 4276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:10,968 4276 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:29:10,968 4276 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:10,968 4276 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:29:10,969 4277 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:10,969 4277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:21,233 2199 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:29:21,244 2210 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:29:21,248 2214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:29:21,249 2215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:29:21,821 2787 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:29:21,821 2787 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:29:21,821 2787 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:29:21,821 2787 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55216
2014-10-07 13:29:21,821 2787 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55216
2014-10-07 13:29:21,822 2788 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:29:21,822 2788 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8792
2014-10-07 13:29:21,822 2788 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8792
2014-10-07 13:29:21,823 2789 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55216 using key f81a50a3f2851c3e
2014-10-07 13:29:21,823 2789 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:29:21,824 2790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:29:22,032 2998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:29:22,111 3077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,111 3077 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:29:22,111 3077 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:29:22,128 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,129 3095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,132 3098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:29:22,134 3100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,134 3100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,135 3101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,135 3101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:29:22,136 3102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,136 3102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,137 3103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,137 3103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:29:22,138 3104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,138 3104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,139 3105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,140 3106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:29:22,141 3107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,142 3108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,142 3108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,143 3109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:29:22,143 3109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,143 3109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,144 3110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,145 3111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:29:22,145 3111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,145 3111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,146 3112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,146 3112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:29:22,147 3113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,147 3113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,147 3113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,148 3114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:29:22,148 3114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,149 3115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,149 3115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,150 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:29:22,150 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,151 3117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,151 3117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,152 3118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:29:22,152 3118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,153 3119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,153 3119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,154 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:29:22,154 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,154 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,155 3121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,155 3121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:29:22,156 3122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,156 3122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,157 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,157 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:29:22,158 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:22,158 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,158 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,173 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:29:22,221 3187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:22,226 3192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,226 3192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,239 3205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:29:22,260 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:29:22,260 3226 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:29:22,261 3227 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:29:22,261 3227 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:29:22,262 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,262 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,279 3245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:29:22,331 3297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:29:22,332 3298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:29:22,333 3299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:29:22,357 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,358 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,371 3337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:29:22,390 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:29:22,390 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:22,393 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:22,393 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:22,437 3403 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:29:22,441 3407 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:29:22,443 3409 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:29:22,443 3409 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:29:23,116 4082 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:29:23,116 4082 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:29:23,117 4083 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:29:23,117 4083 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55218
2014-10-07 13:29:23,117 4083 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55218
2014-10-07 13:29:23,117 4083 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:29:23,117 4083 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8796
2014-10-07 13:29:23,117 4083 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8796
2014-10-07 13:29:23,117 4083 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55218 using key f81a50a3f2851c3e
2014-10-07 13:29:23,118 4084 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:29:23,119 4085 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:29:23,133 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:29:23,212 4178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:29:23,212 4178 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:29:23,212 4178 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:29:23,213 4179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:23,213 4179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:23,214 4180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:29:23,225 4191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:23,228 4194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:23,228 4194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:23,230 4196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:29:23,243 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:29:23,243 4209 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:29:23,244 4210 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:29:23,244 4210 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:29:23,244 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:23,245 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:23,245 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:29:23,321 4287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:29:23,321 4287 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:23,322 4288 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:29:23,322 4288 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:23,324 4290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:23,325 4291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:29:23,331 4297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:29:23,349 4315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:29:23,349 4315 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:29:23,349 4315 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:29:23,350 4316 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:29:23,350 4316 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:29:23,350 4316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:29:23,351 4317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,057 2186 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:33:57,070 2199 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:33:57,074 2203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:33:57,075 2204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:33:57,642 2771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:33:57,643 2772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:33:57,643 2772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:33:57,643 2772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55240
2014-10-07 13:33:57,643 2772 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55240
2014-10-07 13:33:57,643 2772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:33:57,644 2773 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8814
2014-10-07 13:33:57,644 2773 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8814
2014-10-07 13:33:57,645 2774 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55240 using key e0a50cead783ea05
2014-10-07 13:33:57,645 2774 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:33:57,646 2775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:33:57,864 2993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:33:57,969 3098 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:33:57,969 3098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,969 3098 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:33:57,986 3115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,987 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,989 3118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:33:57,991 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,991 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,991 3120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,992 3121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:33:57,992 3121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,993 3122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,993 3122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,994 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:33:57,994 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,994 3123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,995 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,995 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:33:57,997 3126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,997 3126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,997 3126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:57,998 3127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:33:57,999 3128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:57,999 3128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:57,999 3128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,000 3129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:33:58,001 3130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,001 3130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,001 3130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,002 3131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:33:58,002 3131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,003 3132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,003 3132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,004 3133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:33:58,004 3133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,004 3133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,005 3134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,005 3134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:33:58,006 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,006 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,006 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,007 3136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:33:58,008 3137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,008 3137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,008 3137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,009 3138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:33:58,010 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,010 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,011 3140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,011 3140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:33:58,012 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,012 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,012 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,013 3142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:33:58,014 3143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:58,014 3143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,014 3143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,038 3167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:33:58,086 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:33:58,089 3218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,090 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,102 3231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:33:58,121 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:33:58,121 3250 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:33:58,121 3250 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:33:58,121 3250 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:33:58,122 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,123 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,136 3265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,171 3300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,171 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:33:58,172 3301 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:33:58,191 3320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,192 3321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,205 3334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:33:58,226 3355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:33:58,226 3355 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:33:58,227 3356 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:33:58,229 3358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:58,230 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:58,276 3405 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:33:58,281 3410 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:33:58,282 3411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:33:58,282 3411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:33:58,988 4117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:33:58,988 4117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:33:58,989 4118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:33:58,989 4118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55242
2014-10-07 13:33:58,989 4118 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55242
2014-10-07 13:33:58,989 4118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:33:58,989 4118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8818
2014-10-07 13:33:58,989 4118 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8818
2014-10-07 13:33:58,990 4119 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55242 using key e0a50cead783ea05
2014-10-07 13:33:58,990 4119 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:33:58,992 4121 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:33:59,002 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:33:59,085 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:33:59,085 4214 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:33:59,085 4214 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:33:59,085 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:59,086 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:59,087 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:33:59,098 4227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:33:59,100 4229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:59,101 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:59,103 4232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:33:59,115 4244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:33:59,115 4244 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:33:59,116 4245 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:33:59,116 4245 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:33:59,116 4245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:59,117 4246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:59,117 4246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:33:59,193 4322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:33:59,193 4322 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:33:59,194 4323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:33:59,194 4323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:33:59,196 4325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:59,197 4326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:33:59,203 4332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:33:59,221 4350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:33:59,221 4350 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:33:59,221 4350 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:33:59,221 4350 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:33:59,222 4351 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:33:59,222 4351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:33:59,223 4352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:28,934 2170 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:35:28,947 2183 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:35:28,951 2187 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:35:28,952 2188 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:35:29,548 2784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:35:29,549 2785 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:35:29,549 2785 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:35:29,549 2785 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55248
2014-10-07 13:35:29,550 2786 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55248
2014-10-07 13:35:29,550 2786 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:35:29,550 2786 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8828
2014-10-07 13:35:29,550 2786 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8828
2014-10-07 13:35:29,551 2787 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55248 using key 7df84b18bb0cf8ec
2014-10-07 13:35:29,551 2787 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:35:29,552 2788 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:35:29,734 2970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:35:29,814 3050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,814 3050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:35:29,815 3051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:35:29,831 3067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,832 3068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,834 3070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:35:29,836 3072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,836 3072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,837 3073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,837 3073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:35:29,838 3074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,838 3074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,839 3075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,839 3075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:35:29,840 3076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,840 3076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,841 3077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,841 3077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:35:29,842 3078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,843 3079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,843 3079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,844 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:35:29,844 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,844 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,845 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,845 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:35:29,846 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,846 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,846 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,847 3083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:35:29,847 3083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,848 3084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,848 3084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,849 3085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:35:29,849 3085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,849 3085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,850 3086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,850 3086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:35:29,851 3087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,851 3087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,852 3088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,852 3088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:35:29,853 3089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,853 3089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,853 3089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,854 3090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:35:29,855 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,855 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,855 3091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,856 3092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:35:29,856 3092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,857 3093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,857 3093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,858 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:35:29,858 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:29,858 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,859 3095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,880 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:35:29,931 3167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:35:29,936 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,936 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,947 3183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:35:29,959 3195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:35:29,959 3195 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:35:29,960 3196 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:35:29,960 3196 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:35:29,960 3196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:29,961 3197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:29,974 3210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:35:30,031 3267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,032 3268 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:35:30,033 3269 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:35:30,063 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:30,064 3300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:30,086 3322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:35:30,106 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:35:30,110 3346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:35:30,111 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:35:30,112 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:35:30,112 3348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:30,163 3399 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:35:30,169 3405 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:35:30,170 3406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:35:30,170 3406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:35:31,074 4310 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:35:31,075 4311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:35:31,075 4311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:35:31,075 4311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55250
2014-10-07 13:35:31,075 4311 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55250
2014-10-07 13:35:31,075 4311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:35:31,076 4312 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8832
2014-10-07 13:35:31,076 4312 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8832
2014-10-07 13:35:31,076 4312 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55250 using key 7df84b18bb0cf8ec
2014-10-07 13:35:31,076 4312 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:35:31,077 4313 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:35:31,088 4324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:35:31,170 4406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:35:31,170 4406 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:35:31,171 4407 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:35:31,171 4407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:31,172 4408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:31,172 4408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:35:31,183 4419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:35:31,186 4422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:31,187 4423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:31,188 4424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:35:31,201 4437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:35:31,201 4437 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:35:31,201 4437 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:35:31,201 4437 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:35:31,202 4438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:31,202 4438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:31,203 4439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:35:31,279 4515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:35:31,279 4515 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:35:31,279 4515 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:35:31,279 4515 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:35:31,282 4518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:31,283 4519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:35:31,289 4525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:35:31,306 4542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:35:31,306 4542 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:35:31,306 4542 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:35:31,307 4543 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:35:31,307 4543 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:35:31,307 4543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:35:31,308 4544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:21,242 2478 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:38:21,254 2490 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:38:21,258 2494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:38:21,258 2494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:38:21,825 3061 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:38:21,826 3062 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:38:21,826 3062 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:38:21,826 3062 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55256
2014-10-07 13:38:21,826 3062 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55256
2014-10-07 13:38:21,826 3062 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:38:21,827 3063 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8841
2014-10-07 13:38:21,827 3063 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8841
2014-10-07 13:38:21,828 3064 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55256 using key fef9d99aee26432f
2014-10-07 13:38:21,828 3064 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:38:21,829 3065 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:38:22,045 3281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:38:22,124 3360 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:38:22,124 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,125 3361 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:38:22,142 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,143 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,145 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:38:22,147 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,147 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,148 3384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,148 3384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:38:22,149 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,149 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,149 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,150 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:38:22,150 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,151 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,151 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,152 3388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:38:22,153 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,153 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,154 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,154 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:38:22,155 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,155 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,155 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,156 3392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:38:22,156 3392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,157 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,157 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,157 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:38:22,158 3394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,158 3394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,159 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,159 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:38:22,160 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,160 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,160 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,161 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:38:22,162 3398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,162 3398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,163 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,164 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:38:22,164 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,165 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,165 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,166 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:38:22,166 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,167 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,167 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,168 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:38:22,168 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,168 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,169 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,169 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:38:22,170 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:22,170 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,171 3407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,186 3422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:38:22,237 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:38:22,240 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,241 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,250 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:38:22,263 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:38:22,263 3499 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:38:22,263 3499 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:38:22,264 3500 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:38:22,264 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,265 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,282 3518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:38:22,337 3573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,341 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:38:22,342 3578 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:38:22,362 3598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,362 3598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,376 3612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:38:22,399 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:38:22,403 3639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:38:22,404 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:22,404 3640 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:38:22,405 3641 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:38:22,456 3692 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:38:22,461 3697 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:38:22,463 3699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:38:22,463 3699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:38:23,099 4335 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:38:23,099 4335 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:38:23,099 4335 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:38:23,099 4335 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55258
2014-10-07 13:38:23,100 4336 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55258
2014-10-07 13:38:23,100 4336 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:38:23,100 4336 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8845
2014-10-07 13:38:23,100 4336 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8845
2014-10-07 13:38:23,100 4336 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55258 using key fef9d99aee26432f
2014-10-07 13:38:23,101 4337 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:38:23,101 4337 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:38:23,112 4348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:38:23,188 4424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:38:23,188 4424 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:38:23,189 4425 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:38:23,189 4425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:23,189 4425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:23,190 4426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:38:23,202 4438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:38:23,204 4440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:23,205 4441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:23,206 4442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:38:23,219 4455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:38:23,219 4455 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:38:23,219 4455 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:38:23,219 4455 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:38:23,220 4456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:23,220 4456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:23,221 4457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:38:23,303 4539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:38:23,303 4539 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:38:23,304 4540 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:38:23,304 4540 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:38:23,306 4542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:23,307 4543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:38:23,313 4549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:38:23,331 4567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:38:23,332 4568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:38:23,332 4568 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:38:23,333 4569 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:38:23,333 4569 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:38:23,333 4569 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:38:23,333 4569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:39,134 2445 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:40:39,151 2462 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:40:39,155 2466 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:40:39,156 2467 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:40:39,745 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:40:39,745 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:40:39,745 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:40:39,745 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55276
2014-10-07 13:40:39,746 3057 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55276
2014-10-07 13:40:39,746 3057 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:40:39,746 3057 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8855
2014-10-07 13:40:39,746 3057 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8855
2014-10-07 13:40:39,747 3058 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55276 using key 41d34f59e2da3302
2014-10-07 13:40:39,747 3058 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:40:39,748 3059 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:40:39,926 3237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:40:40,001 3312 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:40:40,001 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,002 3313 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:40:40,018 3329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,019 3330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,022 3333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:40:40,024 3335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,025 3336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,025 3336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,026 3337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:40:40,026 3337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,027 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,027 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,027 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:40:40,028 3339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,028 3339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,028 3339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,029 3340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:40:40,030 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,031 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,031 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,032 3343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:40:40,032 3343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,033 3344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,033 3344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,034 3345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:40:40,034 3345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,035 3346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,035 3346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,036 3347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:40:40,036 3347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,037 3348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,037 3348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,038 3349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:40:40,039 3350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,039 3350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,039 3350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,040 3351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:40:40,041 3352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,041 3352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,041 3352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,042 3353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:40:40,043 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,043 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,043 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,044 3355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:40:40,045 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,045 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,045 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,046 3357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:40:40,046 3357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,047 3358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,047 3358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,048 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:40:40,048 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:40,048 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,049 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,071 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:40:40,126 3437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:40:40,130 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,131 3442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,141 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:40:40,159 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:40:40,159 3470 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:40:40,159 3470 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:40:40,159 3470 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:40:40,160 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,160 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,178 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,229 3540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:40:40,229 3540 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:40:40,230 3541 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:40:40,231 3542 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:40:40,251 3562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,251 3562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,265 3576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:40:40,283 3594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:40:40,283 3594 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:40:40,284 3595 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:40:40,286 3597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:40,287 3598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:40,337 3648 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:40:40,344 3655 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:40:40,346 3657 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:40:40,346 3657 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:40:41,126 4437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:40:41,126 4437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:40:41,127 4438 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:40:41,127 4438 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55278
2014-10-07 13:40:41,127 4438 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55278
2014-10-07 13:40:41,127 4438 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:40:41,127 4438 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 8859
2014-10-07 13:40:41,127 4438 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 8859
2014-10-07 13:40:41,128 4439 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55278 using key 41d34f59e2da3302
2014-10-07 13:40:41,128 4439 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:40:41,129 4440 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:40:41,139 4450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:40:41,249 4560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:40:41,249 4560 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:40:41,249 4560 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:40:41,249 4560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:41,250 4561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:41,251 4562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:40:41,262 4573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:40:41,264 4575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:41,265 4576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:41,267 4578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:40:41,279 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:40:41,279 4590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:40:41,280 4591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:40:41,280 4591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:40:41,280 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:41,281 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:41,281 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:40:41,363 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:40:41,363 4674 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:40:41,363 4674 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:40:41,363 4674 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:40:41,366 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:41,367 4678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:40:41,373 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:40:41,390 4701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:40:41,390 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:40:41,390 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:40:41,390 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:40:41,390 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:40:41,391 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:40:41,391 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:10,330 2680 [Test worker] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:43:10,346 2696 [Test worker] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:43:10,350 2700 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:43:10,350 2700 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:43:11,055 3405 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:43:11,056 3406 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:43:11,056 3406 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:43:11,056 3406 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55350
2014-10-07 13:43:11,057 3407 [Test worker] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55350
2014-10-07 13:43:11,057 3407 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:43:11,057 3407 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9060
2014-10-07 13:43:11,057 3407 [Test worker] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9060
2014-10-07 13:43:11,058 3408 [Test worker] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55350 using key 942157b2cc78c899
2014-10-07 13:43:11,059 3409 [Test worker] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:43:11,061 3411 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:43:11,282 3632 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:43:11,381 3731 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,381 3731 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:43:11,382 3732 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:43:11,401 3751 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,402 3752 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,405 3755 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:43:11,407 3757 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,408 3758 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,408 3758 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,409 3759 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:43:11,410 3760 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,410 3760 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,410 3760 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,411 3761 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:43:11,412 3762 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,412 3762 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,412 3762 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,413 3763 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:43:11,414 3764 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,415 3765 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,415 3765 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,416 3766 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:43:11,417 3767 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,417 3767 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,418 3768 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,419 3769 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:43:11,420 3770 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,420 3770 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,421 3771 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,422 3772 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:43:11,422 3772 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,422 3772 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,423 3773 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,423 3773 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:43:11,424 3774 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,425 3775 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,425 3775 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,426 3776 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:43:11,428 3778 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,428 3778 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,429 3779 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,430 3780 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:43:11,431 3781 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,431 3781 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,432 3782 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,432 3782 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:43:11,433 3783 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,434 3784 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,434 3784 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,435 3785 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:43:11,436 3786 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,437 3787 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,438 3788 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,439 3789 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:43:11,440 3790 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:11,440 3790 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,441 3791 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,463 3813 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:43:11,523 3873 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:43:11,528 3878 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,529 3879 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,543 3893 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:43:11,562 3912 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:43:11,563 3913 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:43:11,563 3913 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:43:11,563 3913 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:43:11,564 3914 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,564 3914 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,587 3937 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:43:11,649 3999 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:43:11,649 3999 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,649 3999 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,650 4000 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,651 4001 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:43:11,653 4003 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:43:11,653 4003 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:43:11,680 4030 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,681 4031 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,698 4048 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:43:11,723 4073 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:43:11,723 4073 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:43:11,725 4075 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:43:11,725 4075 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:43:11,725 4075 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:43:11,725 4075 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:43:11,725 4075 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:43:11,726 4076 [Thread-6] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:43:11,727 4077 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:11,728 4078 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:11,790 4140 [Test worker] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:43:11,800 4150 [Test worker] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:43:11,801 4151 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:43:11,801 4151 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:43:12,647 4997 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:43:12,647 4997 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:43:12,648 4998 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:43:12,648 4998 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55352
2014-10-07 13:43:12,648 4998 [Test worker] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55352
2014-10-07 13:43:12,648 4998 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:43:12,648 4998 [Test worker] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9064
2014-10-07 13:43:12,649 4999 [Test worker] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9064
2014-10-07 13:43:12,649 4999 [Test worker] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55352 using key 942157b2cc78c899
2014-10-07 13:43:12,649 4999 [Test worker] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:43:12,650 5000 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:43:12,661 5011 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:43:12,747 5097 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:43:12,747 5097 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:43:12,747 5097 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:43:12,747 5097 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:12,748 5098 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:12,749 5099 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:43:12,762 5112 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:43:12,765 5115 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:12,765 5115 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:12,767 5117 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:43:12,782 5132 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:43:12,782 5132 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:43:12,782 5132 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:43:12,782 5132 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:43:12,783 5133 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:12,783 5133 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:12,784 5134 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:43:12,876 5226 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:43:12,876 5226 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:43:12,876 5226 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:43:12,876 5226 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:43:12,879 5229 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:12,880 5230 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:43:12,887 5237 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:43:12,911 5261 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:43:12,913 5263 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:43:12,914 5264 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:43:12,914 5264 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:43:12,915 5265 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:43:12,915 5265 [Thread-8] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:43:12,915 5265 [Test worker] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:08,173 2451 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:45:08,184 2462 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:45:08,188 2466 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:45:08,188 2466 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:45:08,777 3055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:45:08,777 3055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:45:08,777 3055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:45:08,778 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55370
2014-10-07 13:45:08,778 3056 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55370
2014-10-07 13:45:08,778 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:45:08,778 3056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9093
2014-10-07 13:45:08,778 3056 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9093
2014-10-07 13:45:08,779 3057 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55370 using key 8281099d9b76c652
2014-10-07 13:45:08,780 3058 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:45:08,781 3059 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:45:08,967 3245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-07 13:45:09,055 3333 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:45:09,055 3333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,055 3333 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-07 13:45:09,075 3353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,076 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,078 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-07 13:45:09,080 3358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,080 3358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,081 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,081 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-07 13:45:09,082 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,082 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,083 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,083 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-07 13:45:09,084 3362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,084 3362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,085 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,085 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-07 13:45:09,087 3365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,087 3365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,088 3366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,088 3366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-07 13:45:09,089 3367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,089 3367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,090 3368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,091 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-07 13:45:09,091 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,091 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,092 3370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,092 3370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-07 13:45:09,093 3371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,093 3371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,093 3371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,094 3372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-07 13:45:09,095 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,095 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,095 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,096 3374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-07 13:45:09,097 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,097 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,097 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,098 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-07 13:45:09,098 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,099 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,099 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,100 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-07 13:45:09,100 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,101 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,101 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,102 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-07 13:45:09,102 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,102 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,103 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,103 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-07 13:45:09,104 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:09,104 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,104 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,122 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:45:09,174 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:45:09,177 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,178 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,191 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:45:09,211 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:45:09,213 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,213 3491 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:45:09,213 3491 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:45:09,213 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,213 3491 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:45:09,231 3509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:45:09,279 3557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:45:09,279 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,279 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,279 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,279 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:45:09,279 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 13:45:09,280 3558 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-07 13:45:09,281 3559 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 13:45:09,301 3579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,302 3580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,317 3595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-07 13:45:09,335 3613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-07 13:45:09,335 3613 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-07 13:45:09,336 3614 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:45:09,338 3616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:09,339 3617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:09,389 3667 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 13:45:09,395 3673 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 13:45:09,397 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 13:45:09,397 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 13:45:10,047 4325 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 13:45:10,048 4326 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 13:45:10,048 4326 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 13:45:10,048 4326 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55372
2014-10-07 13:45:10,049 4327 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55372
2014-10-07 13:45:10,049 4327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 13:45:10,049 4327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9097
2014-10-07 13:45:10,049 4327 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9097
2014-10-07 13:45:10,049 4327 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55372 using key 8281099d9b76c652
2014-10-07 13:45:10,050 4328 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 13:45:10,050 4328 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 13:45:10,062 4340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-07 13:45:10,146 4424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 13:45:10,146 4424 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 13:45:10,147 4425 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-07 13:45:10,147 4425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:10,148 4426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:10,149 4427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 13:45:10,160 4438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:45:10,162 4440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:10,163 4441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:10,164 4442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 13:45:10,177 4455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 13:45:10,177 4455 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 13:45:10,177 4455 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 13:45:10,178 4456 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 13:45:10,178 4456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:10,178 4456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:10,179 4457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 13:45:10,255 4533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 13:45:10,255 4533 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:45:10,256 4534 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-07 13:45:10,256 4534 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:45:10,258 4536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:10,259 4537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 13:45:10,266 4544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-07 13:45:10,284 4562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-07 13:45:10,285 4563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 13:45:10,286 4564 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-07 13:45:10,286 4564 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 13:45:10,286 4564 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-07 13:45:10,286 4564 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 13:45:10,287 4565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:19,672 3278 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:19,684 3290 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:19,687 3293 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:19,688 3294 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:20,281 3887 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:20,282 3888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:20,282 3888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:20,282 3888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55901
2014-10-07 14:21:20,282 3888 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55901
2014-10-07 14:21:20,282 3888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:20,283 3889 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9419
2014-10-07 14:21:20,283 3889 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9419
2014-10-07 14:21:20,283 3889 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55901 using key 5dcf5946d0e2b620
2014-10-07 14:21:20,284 3890 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:20,285 3891 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:20,449 4055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:20,524 4130 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:20,524 4130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:20,524 4130 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:20,540 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,541 4147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,543 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:20,545 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:20,546 4152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,546 4152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,547 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:20,548 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:20,548 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,549 4155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,550 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:20,550 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:20,551 4157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,551 4157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,565 4171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:20,600 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:20,604 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,604 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,613 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:20,625 4231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:20,625 4231 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:20,626 4232 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:20,626 4232 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:20,627 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,627 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,640 4246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:20,709 4315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:20,709 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:20,710 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:20,710 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:20,710 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:20,766 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,767 4373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,795 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-07 14:21:20,836 4442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-07 14:21:20,836 4442 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:20,836 4442 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:20,836 4442 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:20,836 4442 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:20,837 4443 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:20,837 4443 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:20,838 4444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:20,839 4445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:20,843 4449 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:20,848 4454 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:20,849 4455 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:20,850 4456 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:21,478 5084 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:21,478 5084 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:21,479 5085 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:21,479 5085 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55903
2014-10-07 14:21:21,479 5085 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55903
2014-10-07 14:21:21,479 5085 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:21,479 5085 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9423
2014-10-07 14:21:21,479 5085 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9423
2014-10-07 14:21:21,479 5085 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55903 using key 5dcf5946d0e2b620
2014-10-07 14:21:21,480 5086 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:21,481 5087 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:21,513 5119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:21,597 5203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:21,597 5203 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:21,597 5203 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:21,598 5204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,598 5204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,599 5205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:21,600 5206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:21,601 5207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,601 5207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,602 5208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:21,603 5209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:21,603 5209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,604 5210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,605 5211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:21,606 5212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:21,607 5213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,607 5213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,608 5214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:21,644 5250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:21,646 5252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,646 5252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,648 5254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:21,658 5264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:21,658 5264 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:21,659 5265 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:21,659 5265 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:21,659 5265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,660 5266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,660 5266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:21,712 5318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:21,712 5318 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:21,712 5318 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:21,712 5318 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:21,713 5319 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:21,716 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,716 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,724 5330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-07 14:21:21,768 5374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(1),'1'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-07 14:21:21,768 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:21,768 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:21,768 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:21,769 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:21,769 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 1
2014-10-07 14:21:21,769 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:21,770 5376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:21,770 5376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:21,775 5381 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:21,784 5390 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:21,785 5391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:21,785 5391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:22,384 5990 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:22,385 5991 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:22,385 5991 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:22,385 5991 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55905
2014-10-07 14:21:22,385 5991 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55905
2014-10-07 14:21:22,385 5991 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:22,385 5991 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9427
2014-10-07 14:21:22,386 5992 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9427
2014-10-07 14:21:22,386 5992 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55905 using key 5dcf5946d0e2b620
2014-10-07 14:21:22,386 5992 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:22,387 5993 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:22,413 6019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:22,492 6098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:22,492 6098 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:22,492 6098 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:22,492 6098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,493 6099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,494 6100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:22,495 6101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:22,495 6101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,495 6101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,496 6102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:22,497 6103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:22,497 6103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,498 6104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,498 6104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:22,499 6105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:22,499 6105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,500 6106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,500 6106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:22,531 6137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:22,533 6139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,533 6139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,535 6141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:22,546 6152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:22,546 6152 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:22,546 6152 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:22,546 6152 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:22,546 6152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,547 6153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,547 6153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:22,594 6200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:22,594 6200 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:22,594 6200 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:22,594 6200 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:22,594 6200 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:22,596 6202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,597 6203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:22,604 6210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))'),ARes),true.

2014-10-07 14:21:22,615 6221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED',[],'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))')),[]))
2014-10-07 14:21:22,615 6221 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (FALSE)
2014-10-07 14:21:22,616 6222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:22,616 6222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;','.'('min applied to empty set;;','.'('min applied to empty set;;','.'('min applied to empty set;;',[]))))),[]))
2014-10-07 14:21:22,617 6223 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-07 14:21:22,620 6226 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:22,621 6227 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:22,622 6228 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:22,622 6228 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:22,622 6228 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:22,622 6228 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-07 14:21:22,626 6232 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:22,628 6234 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:22,631 6237 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:22,632 6238 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:22,634 6240 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:22,634 6240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:22,634 6240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:23,351 6957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:23,351 6957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:23,351 6957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:23,351 6957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55907
2014-10-07 14:21:23,351 6957 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55907
2014-10-07 14:21:23,352 6958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:23,352 6958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9431
2014-10-07 14:21:23,352 6958 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9431
2014-10-07 14:21:23,352 6958 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55907 using key 5dcf5946d0e2b620
2014-10-07 14:21:23,352 6958 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:23,354 6960 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:23,377 6983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:23,457 7063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:23,457 7063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:23,457 7063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:23,457 7063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,458 7064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,459 7065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:23,460 7066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:23,461 7067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,461 7067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,462 7068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:23,463 7069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:23,463 7069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,464 7070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,465 7071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:23,466 7072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:23,466 7072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,466 7072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,467 7073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_24,formula_23],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:23,497 7103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:23,498 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,498 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,500 7106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:23,511 7117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:23,511 7117 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:23,512 7118 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:23,512 7118 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:23,512 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,512 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,513 7119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_24,formula_23],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:23,559 7165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:23,559 7165 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:23,560 7166 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:23,560 7166 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:23,560 7166 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:23,562 7168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,562 7168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,567 7173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,member(none,identifier(none,nn),nat_set(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))'),ARes),true.

2014-10-07 14:21:23,590 7196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(4),'4'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))')),[]))
2014-10-07 14:21:23,590 7196 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating nn (not critical [unless failure]) : INTEGER : 4:sup ---> 4:4
2014-10-07 14:21:23,590 7196 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:23,590 7196 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:23,590 7196 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-07 14:21:23,590 7196 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 4
2014-10-07 14:21:23,591 7197 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:23,591 7197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:23,592 7198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:23,595 7201 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:23,599 7205 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:23,601 7207 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:23,601 7207 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:24,227 7833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:24,227 7833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:24,227 7833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:24,228 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55909
2014-10-07 14:21:24,228 7834 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55909
2014-10-07 14:21:24,228 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:24,228 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9435
2014-10-07 14:21:24,228 7834 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9435
2014-10-07 14:21:24,228 7834 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55909 using key 5dcf5946d0e2b620
2014-10-07 14:21:24,229 7835 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:24,230 7836 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:24,246 7852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:24,318 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:24,318 7924 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:24,319 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:24,319 7925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,320 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,320 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:24,322 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:24,322 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,322 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,323 7929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:24,324 7930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:24,324 7930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,325 7931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,326 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:24,326 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:24,326 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,327 7933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,327 7933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_29,formula_31,formula_30],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:24,362 7968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:24,364 7970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,364 7970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,365 7971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:24,376 7982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:24,376 7982 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:24,376 7982 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:24,376 7982 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:24,377 7983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,377 7983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,378 7984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_29,formula_31,formula_30],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:24,424 8030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:24,424 8030 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:24,424 8030 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:24,424 8030 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:24,424 8030 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:24,426 8032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,427 8033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,431 8037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-10-07 14:21:24,450 8056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-10-07 14:21:24,450 8056 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:24,450 8056 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:24,450 8056 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-07 14:21:24,450 8056 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:24,450 8056 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:24,451 8057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:24,451 8057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:24,454 8060 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:24,459 8065 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:24,460 8066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:24,460 8066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:25,063 8669 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:25,063 8669 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:25,063 8669 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:25,063 8669 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55911
2014-10-07 14:21:25,063 8669 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55911
2014-10-07 14:21:25,063 8669 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:25,064 8670 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9439
2014-10-07 14:21:25,064 8670 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9439
2014-10-07 14:21:25,064 8670 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55911 using key 5dcf5946d0e2b620
2014-10-07 14:21:25,064 8670 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:25,065 8671 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:25,084 8690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:25,157 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:25,157 8763 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:25,158 8764 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:25,158 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,158 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,159 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:25,161 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:25,161 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,161 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,162 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:25,163 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:25,163 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,163 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,164 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:25,165 8771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:25,166 8772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,166 8772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,167 8773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_36,formula_38,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:25,199 8805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:25,200 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,201 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,202 8808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:25,212 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:25,212 8818 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:25,213 8819 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:25,213 8819 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:25,213 8819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,213 8819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,214 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_36,formula_38,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:25,261 8867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:25,261 8867 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:25,261 8867 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:25,261 8867 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:25,261 8867 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:25,263 8869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,263 8869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,268 8874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),not_equal(none,identifier(none,queue),empty_sequence(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))'),ARes),true.

2014-10-07 14:21:25,293 8899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))')),[]))
2014-10-07 14:21:25,293 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:25,293 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:25,293 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:25,294 8900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:25,294 8900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:25,294 8900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:25,294 8900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:25,295 8901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:25,299 8905 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:25,303 8909 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:25,304 8910 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:25,305 8911 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55913
2014-10-07 14:21:25,919 9525 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55913
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:25,919 9525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9443
2014-10-07 14:21:25,920 9526 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9443
2014-10-07 14:21:25,920 9526 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55913 using key 5dcf5946d0e2b620
2014-10-07 14:21:25,920 9526 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:25,921 9527 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:25,937 9543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:26,008 9614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,008 9614 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:26,008 9614 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:26,008 9614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,009 9615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,010 9616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:26,012 9618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,012 9618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,012 9618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,012 9618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:26,014 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,014 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,014 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,015 9621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:26,016 9622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,016 9622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,017 9623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,018 9624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_43,formula_45,formula_44],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:26,048 9654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:26,049 9655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,050 9656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,051 9657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:26,062 9668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:26,062 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:26,062 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:26,062 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:26,063 9669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,063 9669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,064 9670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_43,formula_45,formula_44],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:26,114 9720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:26,114 9720 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:26,115 9721 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:26,115 9721 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:26,115 9721 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:26,116 9722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,117 9723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,121 9727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-07 14:21:26,153 9759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),'.'(','(int(2),int(0)),'.'(','(int(3),int(1)),[]))),'{(1|->0),(2|->0),(3|->1)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-07 14:21:26,153 9759 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:26,153 9759 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:26,153 9759 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:26,153 9759 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0,0,1] &
2014-10-07 14:21:26,154 9760 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:26,154 9760 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:26,154 9760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,155 9761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,158 9764 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:26,163 9769 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:26,164 9770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:26,164 9770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:26,765 10371 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55915
2014-10-07 14:21:26,766 10372 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55915
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9447
2014-10-07 14:21:26,766 10372 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9447
2014-10-07 14:21:26,766 10372 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55915 using key 5dcf5946d0e2b620
2014-10-07 14:21:26,767 10373 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:26,768 10374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:26,782 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:26,870 10476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,870 10476 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:26,870 10476 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:26,870 10476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,871 10477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,872 10478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:26,873 10479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,873 10479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,874 10480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,874 10480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:26,876 10482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,876 10482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,877 10483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,877 10483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:26,878 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:26,878 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,879 10485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,879 10485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_50,formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:26,917 10523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:26,918 10524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,918 10524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,919 10525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:26,930 10536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:26,930 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:26,931 10537 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:26,931 10537 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:26,931 10537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,931 10537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,932 10538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_50,formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:26,977 10583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:26,977 10583 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:26,977 10583 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:26,978 10584 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:26,978 10584 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:26,979 10585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,979 10585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:26,984 10590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))'),ARes),true.

2014-10-07 14:21:26,992 10598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED',[],'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))')),[]))
2014-10-07 14:21:26,992 10598 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (FALSE)
2014-10-07 14:21:26,993 10599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:26,993 10599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;','.'('max applied to empty set;;','.'('max applied to empty set;;','.'('max applied to empty set;;',[]))))),[]))
2014-10-07 14:21:26,994 10600 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-07 14:21:26,996 10602 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:27,000 10606 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:27,002 10608 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:27,005 10611 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-07 14:21:27,006 10612 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:27,007 10613 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-07 14:21:27,007 10613 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:27,007 10613 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-07 14:21:27,007 10613 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:27,008 10614 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-07 14:21:27,611 11217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:27,612 11218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:27,612 11218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:27,612 11218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55917
2014-10-07 14:21:27,612 11218 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55917
2014-10-07 14:21:27,612 11218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:27,612 11218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9451
2014-10-07 14:21:27,612 11218 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9451
2014-10-07 14:21:27,613 11219 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55917 using key 5dcf5946d0e2b620
2014-10-07 14:21:27,613 11219 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:27,615 11221 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:27,629 11235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:27,703 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:27,703 11309 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:27,704 11310 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:27,704 11310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,704 11310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,705 11311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:27,706 11312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:27,707 11313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,707 11313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,707 11313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:27,709 11315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:27,709 11315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,709 11315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,710 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:27,710 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:27,711 11317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,711 11317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,711 11317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_59,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:27,741 11347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:27,742 11348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,743 11349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,744 11350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:27,755 11361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:27,755 11361 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:27,756 11362 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:27,756 11362 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:27,756 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,756 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,757 11363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_59,formula_58],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:27,815 11421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:27,816 11422 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:27,816 11422 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:27,816 11422 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:27,816 11422 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:27,817 11423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,818 11424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,822 11428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-10-07 14:21:27,828 11434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-10-07 14:21:27,828 11434 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:27,828 11434 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:27,828 11434 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-07 14:21:27,829 11435 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:27,829 11435 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:27,829 11435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:27,830 11436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:27,833 11439 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:27,842 11448 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:27,842 11448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:27,843 11449 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:28,460 12066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:28,461 12067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:28,461 12067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:28,461 12067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55919
2014-10-07 14:21:28,461 12067 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55919
2014-10-07 14:21:28,461 12067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:28,461 12067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9455
2014-10-07 14:21:28,461 12067 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9455
2014-10-07 14:21:28,462 12068 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55919 using key 5dcf5946d0e2b620
2014-10-07 14:21:28,462 12068 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:28,463 12069 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:28,477 12083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:28,549 12155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:28,549 12155 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:28,550 12156 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:28,550 12156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,551 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,551 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:28,553 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:28,553 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,553 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,554 12160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:28,555 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:28,555 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,556 12162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,556 12162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:28,557 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:28,557 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,557 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,558 12164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_64,formula_66,formula_65],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:28,597 12203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:28,598 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,598 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,599 12205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:28,609 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:28,609 12215 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:28,609 12215 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:28,609 12215 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:28,610 12216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,610 12216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,611 12217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_64,formula_66,formula_65],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:28,659 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:28,659 12265 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:28,659 12265 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:28,660 12266 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:28,660 12266 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:28,661 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,661 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,665 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),not_equal(none,identifier(none,queue),empty_sequence(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))'),ARes),true.

2014-10-07 14:21:28,691 12297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))')),[]))
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:28,691 12297 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:28,692 12298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:28,692 12298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:28,695 12301 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:28,701 12307 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:28,701 12307 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:28,701 12307 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:29,300 12906 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:29,300 12906 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:29,300 12906 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:29,301 12907 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55921
2014-10-07 14:21:29,301 12907 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55921
2014-10-07 14:21:29,301 12907 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:29,301 12907 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9459
2014-10-07 14:21:29,301 12907 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9459
2014-10-07 14:21:29,301 12907 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55921 using key 5dcf5946d0e2b620
2014-10-07 14:21:29,302 12908 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:29,303 12909 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:29,316 12922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:29,389 12995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:29,389 12995 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:29,389 12995 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:29,389 12995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,390 12996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,390 12996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:29,392 12998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:29,392 12998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,392 12998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,393 12999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:29,394 13000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:29,394 13000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,395 13001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,395 13001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:29,396 13002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:29,396 13002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,396 13002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,397 13003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_73,formula_72],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:29,428 13034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:29,429 13035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,429 13035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,430 13036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:29,440 13046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:29,440 13046 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:29,441 13047 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:29,441 13047 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:29,441 13047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,441 13047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,442 13048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_73,formula_72],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:29,489 13095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:29,489 13095 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:29,489 13095 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:29,489 13095 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:29,489 13095 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:29,490 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,491 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,495 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-07 14:21:29,524 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-07 14:21:29,524 13130 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:29,524 13130 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:29,525 13131 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:29,525 13131 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:29,525 13131 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:29,525 13131 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:29,525 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:29,525 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:29,528 13134 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:29,533 13139 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:29,534 13140 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:29,534 13140 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:30,257 13863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:30,257 13863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:30,257 13863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:30,258 13864 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55923
2014-10-07 14:21:30,258 13864 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55923
2014-10-07 14:21:30,258 13864 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:30,258 13864 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9463
2014-10-07 14:21:30,258 13864 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9463
2014-10-07 14:21:30,258 13864 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55923 using key 5dcf5946d0e2b620
2014-10-07 14:21:30,259 13865 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:30,260 13866 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:30,273 13879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:30,352 13958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:30,352 13958 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:30,352 13958 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:30,352 13958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,353 13959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,353 13959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:30,355 13961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:30,355 13961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,356 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,356 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:30,357 13963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:30,358 13964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,358 13964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,359 13965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:30,360 13966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:30,360 13966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,361 13967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,361 13967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_78,formula_80,formula_79],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:30,391 13997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:30,392 13998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,392 13998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,394 14000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:30,405 14011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:30,405 14011 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:30,405 14011 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:30,405 14011 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:30,405 14011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,406 14012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,406 14012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_78,formula_80,formula_79],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:30,453 14059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:30,453 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:30,453 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:30,453 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:30,454 14060 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:30,454 14060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,455 14061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,459 14065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))'),ARes),true.

2014-10-07 14:21:30,481 14087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))')),[]))
2014-10-07 14:21:30,481 14087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:30,481 14087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-07 14:21:30,481 14087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:30,481 14087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-07 14:21:30,482 14088 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-07 14:21:30,482 14088 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:30,482 14088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:30,482 14088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:30,485 14091 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:30,490 14096 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:30,491 14097 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:30,491 14097 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:31,077 14683 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:31,077 14683 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:31,077 14683 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:31,077 14683 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55925
2014-10-07 14:21:31,077 14683 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55925
2014-10-07 14:21:31,077 14683 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:31,078 14684 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9467
2014-10-07 14:21:31,078 14684 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9467
2014-10-07 14:21:31,078 14684 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55925 using key 5dcf5946d0e2b620
2014-10-07 14:21:31,078 14684 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:31,079 14685 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:31,094 14700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:31,172 14778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:31,172 14778 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:31,172 14778 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:31,173 14779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,173 14779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,174 14780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:31,175 14781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:31,175 14781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,176 14782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,176 14782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:31,177 14783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:31,177 14783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,178 14784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,178 14784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:31,179 14785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:31,179 14785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,180 14786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,180 14786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_85,formula_87,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:31,211 14817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:31,212 14818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,213 14819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,214 14820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:31,225 14831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:31,225 14831 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:31,226 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:31,226 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:31,226 14832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,226 14832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,227 14833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_85,formula_87,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:31,276 14882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:31,276 14882 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:31,276 14882 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:31,276 14882 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:31,276 14882 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:31,277 14883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,278 14884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,282 14888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))'),ARes),true.

2014-10-07 14:21:31,285 14891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))')),[]))
2014-10-07 14:21:31,285 14891 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-07 14:21:31,285 14891 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:31,285 14891 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = []
2014-10-07 14:21:31,285 14891 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:31,285 14891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:31,286 14892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:31,289 14895 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-07 14:21:31,295 14901 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-07 14:21:31,296 14902 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-07 14:21:31,296 14902 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-07 14:21:31,979 15585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-07 14:21:31,979 15585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-07 14:21:31,979 15585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-07 14:21:31,980 15586 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 55927
2014-10-07 14:21:31,980 15586 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 55927
2014-10-07 14:21:31,980 15586 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-07 14:21:31,980 15586 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9471
2014-10-07 14:21:31,980 15586 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9471
2014-10-07 14:21:31,980 15586 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 55927 using key 5dcf5946d0e2b620
2014-10-07 14:21:31,981 15587 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-07 14:21:31,982 15588 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-07 14:21:31,995 15601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-07 14:21:32,075 15681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:32,075 15681 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-07 14:21:32,075 15681 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-07 14:21:32,076 15682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,076 15682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,077 15683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-07 14:21:32,078 15684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:32,079 15685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,079 15685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,079 15685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-07 14:21:32,080 15686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:32,081 15687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,081 15687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,081 15687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-07 14:21:32,082 15688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-07 14:21:32,082 15688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,083 15689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,083 15689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_92,formula_94,formula_93],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-07 14:21:32,114 15720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:32,115 15721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,115 15721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,116 15722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-07 14:21:32,128 15734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-07 14:21:32,128 15734 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-07 14:21:32,128 15734 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-07 14:21:32,128 15734 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-07 14:21:32,129 15735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,129 15735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,129 15735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_92,formula_94,formula_93],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-07 14:21:32,178 15784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-07 14:21:32,178 15784 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-07 14:21:32,178 15784 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-07 14:21:32,178 15784 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-07 14:21:32,178 15784 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-07 14:21:32,179 15785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,180 15786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-07 14:21:32,183 15789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),not_equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))'),ARes),true.

2014-10-07 14:21:32,211 15817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))')),[]))
2014-10-07 14:21:32,211 15817 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-07 14:21:32,212 15818 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-07 14:21:32,212 15818 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-07 14:21:32,212 15818 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0]
2014-10-07 14:21:32,212 15818 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-07 14:21:32,212 15818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-07 14:21:32,212 15818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
