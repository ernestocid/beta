<?xml version="1.0" encoding="UTF-8"?>
<test-suite>
    <machine-name>Marriage</machine-name>
    <operation-under-test>wed</operation-under-test>
    <partition-strategy>Equivalence Classes</partition-strategy>
    <combinatorial-criteria>All-Combinations</combinatorial-criteria>
    <test-cases>
        <test-case>
            <id>1</id>
            <formula>not(mm /: dom(marriage)) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; mm : male &amp; male /\ female = {} &amp; ff /: ran(marriage) &amp; not(ff : female) &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>(PERSON2|-&gt;PERSON1)</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON2</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON2</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>2</id>
            <formula>mm /: dom(marriage) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; mm : male &amp; male /\ female = {} &amp; ff /: ran(marriage) &amp; not(ff : female) &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>{-}</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>3</id>
            <formula>mm /: dom(marriage) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; not(mm : male) &amp; male /\ female = {} &amp; ff /: ran(marriage) &amp; not(ff : female) &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>{-}</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>4</id>
            <formula>not(mm /: dom(marriage)) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; mm : male &amp; male /\ female = {} &amp; not(ff /: ran(marriage)) &amp; ff : female &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>(PERSON2|-&gt;PERSON1)</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON2</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>5</id>
            <formula>mm /: dom(marriage) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; mm : male &amp; male /\ female = {} &amp; ff /: ran(marriage) &amp; ff : female &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>{-}</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON2</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>6</id>
            <formula>mm /: dom(marriage) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; not(mm : male) &amp; male /\ female = {} &amp; not(ff /: ran(marriage)) &amp; ff : female &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>(PERSON2|-&gt;PERSON1)</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
        <test-case>
            <id>7</id>
            <formula>mm /: dom(marriage) &amp; male &lt;: PERSON &amp; female &lt;: PERSON &amp; not(mm : male) &amp; male /\ female = {} &amp; ff /: ran(marriage) &amp; ff : female &amp; marriage : (male &gt;+&gt; female)</formula>
            <state-variables>
                <variable>
                    <identifier>marriage</identifier>
                    <values>
                        <value>{-}</value>
                    </values>
                </variable>
            </state-variables>
            <operation-parameters>
                <parameter>
                    <identifier>mm</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
                <parameter>
                    <identifier>ff</identifier>
                    <values>
                        <value>PERSON1</value>
                    </values>
                </parameter>
            </operation-parameters>
            <return-variables/>
        </test-case>
    </test-cases>
</test-suite>
