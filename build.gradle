import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;

subprojects {
    apply plugin: 'eclipse'
	apply plugin: 'java'
    apply plugin: 'maven'
    version = '1.2'
    sourceCompatibility = 1.6

    repositories {
        mavenCentral()

		maven {
			name "sonatype snapshots"
			url "https://oss.sonatype.org/content/repositories/snapshots"
		}
    }

    dependencies {
        testCompile "junit:junit:4.11"
    }
}

task configurationsFiles {
	println 'Copying properties files to proper folders'

	// to libs folder

  def libsFolder = new File('br.ufrn.forall.betacommon/build/libs/')

  if(!libsFolder.exists()) {
    libsFolder.mkdirs()
  }

	Path source = Paths.get("config.properties");
	Path libsPath = Paths.get("br.ufrn.forall.betacommon/build/libs/config.properties");

	Files.copy(source, libsPath, StandardCopyOption.REPLACE_EXISTING);

	// todo resources folder

  def resourcesFolder = new File('br.ufrn.forall.betagui/build/resources/main/')

  if(!resourcesFolder.exists()) {
    resourcesFolder.mkdirs()
  }

	Path resourcesPath = Paths.get("br.ufrn.forall.betagui/build/resources/main/config.properties");

	Files.copy(source, resourcesPath, StandardCopyOption.REPLACE_EXISTING);

	println 'Done!'
}

project(':br.ufrn.forall.beta') {

	def core_version = '2.0.0-SNAPSHOT'

	dependencies {
		compile project(':br.ufrn.forall.betaanimator'), project(':br.ufrn.forall.betacommon'), project(':br.ufrn.forall.betaparser'), project(':br.ufrn.forall.datacomb')
		compile group: "de.hhu.stups", name: "de.prob2.kernel", version: core_version , changing: true
		compile group: "com.google.truth", name: "truth", version: "0.25" , changing: true
		compile group: "net.sf.supercsv", name: "super-csv", version: "2.2.1" , changing: true
		compile 'commons-io:commons-io:2.4'
		compile 'commons-lang:commons-lang:2.2'
		compile 'org.mockito:mockito-all:1.9.5'
		compile 'com.io7m.xom:xom:1.2.10'
	}

}

project(':br.ufrn.forall.betaanimator') {
	dependencies {
		compile project(':br.ufrn.forall.betacommon'), project(':br.ufrn.forall.betaparser')
	}
}

project(':br.ufrn.forall.betacommon') {
	dependencies {
		compile 'xml-resolver:xml-resolver:1.2'
		compile 'org.apache.commons:commons-vfs2:2.0'
		compile 'commons-logging:commons-logging:1.1.1'
		compile 'commons-lang:commons-lang:2.6'
		compile 'commons-jxpath:commons-jxpath:1.3'
		compile 'org.apache.commons:commons-jexl:2.1.1'
		compile 'commons-digester:commons-digester:1.8.1'
		compile 'commons-configuration:commons-configuration:1.9'
		compile 'commons-collections:commons-collections:3.2.1'
		compile 'commons-codec:commons-codec:1.6'
		compile 'commons-beanutils:commons-beanutils:1.8.3'
	}
}

project(':br.ufrn.forall.betagui') {
	dependencies {
		compile project(':br.ufrn.forall.beta'), project(':br.ufrn.forall.betaanimator'), project(':br.ufrn.forall.betacommon'), project(':br.ufrn.forall.betaparser'), project(':br.ufrn.forall.datacomb')
		compile files('libs/unittestgenerator.jar')
	}
}

project(':br.ufrn.forall.betaparser') {

	// def parser_version = '2.5.0-SNAPSHOT'
	def parser_version = '2.5.1'
	// def core_version = '2.0.0-SNAPSHOT'
	def core_version = '2.0.1-SNAPSHOT'

	dependencies {
		compile group: "de.hhu.stups", name: "de.prob2.kernel", version: core_version , changing: true
		compile group: "de.hhu.stups", name: "answerparser", version: parser_version , changing: true
		compile group: "de.hhu.stups", name: "bparser", version: parser_version , changing: true
		compile group: "de.hhu.stups", name: "cliparser", version: parser_version , changing: true
		compile group: "de.hhu.stups", name: "parserbase", version: parser_version , changing: true
		compile group: "com.google.truth", name: "truth", version: "0.25" , changing: true
		compile 'org.mockito:mockito-all:1.9.5'
	}
}

project('br.ufrn.forall.betagui') {
	apply plugin: 'application'
	mainClassName = "views.Application"

	task createPropertiesFile {
		def propertiesFile = file("$buildDir/resources/main/config.properties")
		outputs.file propertiesFile
	}

	applicationDistribution.from(createPropertiesFile) {
    	into "lib"
	}

	distZip {

		// Getting current date to put on the distribution file

		def cal = Calendar.instance

		def day = String.valueOf(cal.get(Calendar.DAY_OF_MONTH))
		def month = String.valueOf(cal.get(Calendar.MONTH)+1)
		def year = String.valueOf(cal.get(Calendar.YEAR))
		def hours = String.valueOf(cal.get(Calendar.HOUR))
		def minutes = String.valueOf(cal.get(Calendar.MINUTE))
		def seconds = String.valueOf(cal.get(Calendar.SECOND))

		def buildTime = day+month+year+'-'+hours+minutes+seconds

		archiveName "beta"+'-'+version+'-bin-'+buildTime+'.zip'

    }
}

// Experiment projects

project(':br.ufrn.forall.logicalcoverageexperiments') {

//	def core_version = '2.0.0-milestone-23-SNAPSHOT'
//	def core_version = '2.0.0-SNAPSHOT'
	def core_version = '2.0.1-SNAPSHOT'

	dependencies {
		compile project(':br.ufrn.forall.beta'), project(':br.ufrn.forall.betacommon'), project(':br.ufrn.forall.betaparser'), project(':br.ufrn.forall.datacomb')
		compile group: "de.hhu.stups", name: "de.prob2.kernel", version: core_version , changing: true
//		compile group: "de.prob2", name: "de.prob2.kernel", version: core_version , changing: true
		compile 'commons-io:commons-io:2.4'
		compile 'commons-lang:commons-lang:2.2'
		compile 'org.mockito:mockito-all:1.9.5'
		compile 'com.io7m.xom:xom:1.2.10'
	}
}

